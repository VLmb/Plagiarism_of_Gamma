from gradio_client import Client
import json
import time

client = Client("Qwen/Qwen2.5")  # Укажи актуальный URL

SYSTEM_PROMPT = '''Вы — эксперт по созданию текста для презентаций. 
Ваша задача — генерировать контент для презентации на основе запроса пользователя.
Для каждого слайда предоставьте заголовок и описание в следующем формате:
"Slides": [{"Slide_title":  , "Slide_content":}]".
вот тебе пример json-ответа
  "Slides": [
    {
      "Slide_title": "текст заголовка",
      "Slide_content": "текст основной части"    
    }
]
по итогу, ты должен мне вернуть массив слайдов, для каждого есть два поля - Slide_title и Slide_content

Верните только указанное количество слайдов, каждый с уникальным заголовком и текстом, соответствующим теме.
ответ возвращай в json формате. Если после "Предложения, на основе которых создавать слайды" есть текст, то генерируешь
презентацию ТОЛЬКО и только, ничем более не руководствуясь, на основе этого текста, если текст отсутствует, то генерируешь, ориентируясь лишь на название
'''

RADIO = "72B"
API_NAME = "/model_chat"

def create_user_prompt(slides_num, pres_name, text='') -> str:
    prompt = (f"Создай презентацию с количеством слайдов: {slides_num}. "
              f"Тема презентации: {pres_name}. "
              f"Для каждого слайда придумай заголовок и описание."
              f"Предложения, на основе которых создавать слайды: {text}")
    return prompt

def query_to_qwen(slides_num, pres_name, text=''):
    '''
    Делает запрос в нейросеть, формируя промпт пользователя, после возвращает
    текстовый ответ от нейросети
    '''
    user_prompt = create_user_prompt(slides_num, pres_name, text)
    try:
        result = client.predict(
            query=user_prompt,
            system=SYSTEM_PROMPT,
            radio=RADIO,
            api_name=API_NAME
        )
        if isinstance(result, tuple):
            text_answer = result[1][0][-1]['text']
        else:
            text_answer = result

        # удаление "мусора"
        text_answer = text_answer.replace("`", "")
        text_answer = text_answer.replace("json\n", "")

        text_answer = json.loads(text_answer)  # представляем ответ в виде словаря
        return text_answer

    except Exception as e:
        print("ошибка", e)
        return None

def generate_presentation_by_description(description, slides_num, pres_name):
    '''
    Генерирует презентацию на основе описания
    '''
    response = query_to_qwen(slides_num, pres_name, description)
    if response and "Slides" in response:
        return {"Slides": response["Slides"]}
    else:
        return {"Slides": []}

def generate_presentation_by_titles(pres_name, slides):
    '''
    Генерирует слайды по названиям, отправляя отдельный запрос на каждый слайд
    '''
    result_slides = []
    for slide in slides:
        slide_title = slide.get("Slide_title", "")
        response = query_to_qwen(1, pres_name, slide_title)
        if response and "Slides" in response and len(response["Slides"]) > 0:
            slide_content = response["Slides"][0].get("Slide_content", "")
            result_slides.append({
                "Slide_title": slide_title,
                "Slide_content": slide_content
            })
        else:
            result_slides.append({
                "Slide_title": slide_title,
                "Slide_content": "Не удалось сгенерировать содержимое слайда."
            })
        time.sleep(1)  # Пауза между запросами, чтобы избежать перегрузки
    return {"Slides": result_slides}




if __name__ == "__main__":
    test_text = '''Вот тебе 10 чётких и развёрнутых тезисов про глобализацию — без воды, по существу и с разных сторон:1. **Ускоренный обмен технологиями и знаниями**  Глобализация упростила доступ к современным технологиям, исследованиям и образовательным ресурсам по всему миру. Это позволяет развивающимся странам быстрее сокращать технологическое отставание.2. **Углубление международного разделения труда**  Страны специализируются на том, что у них получается лучше всего (по Рикардо), а цепочки поставок растягиваются на весь мир. Например, айфон проектируют в США, компоненты производят в Азии, собирают в Китае.
3. **Рост влияния транснациональных корпораций (ТНК)**  
Гиганты вроде Google, Amazon, Nestlé и других действуют глобально и часто оказываются мощнее государств. Они диктуют правила, меняют рынки и формируют тренды, выходящие за рамки национальных интересов.
4. **Стирание культурных границ**  
Глобализация унифицирует потребление, музыку, кино, еду и одежду — от ТикТока до фастфуда. Это создаёт "глобальную культуру", но может вести к эрозии локальных традиций и идентичности.. **Рост экономического неравенства**  
Хотя в целом глобализация увеличивает мировой ВВП, она усиливает расслоение: крупные города и образованные элиты выигрывают, а бедные и менее образованные регионы часто теряют позиции и рабочие места.
 6. **Уязвимость к глобальным кризисам**  
Связанность рынков делает всю систему хрупкой. Финансовые, пандемические или логистические сбои в одной стране быстро отражаются на всей планете — как это было с COVID-19 и кризисом микрочипов.
7. **Миграция рабочей силы и «утечка мозгов»**  
Специалисты уезжают в страны с лучшими условиями, создавая дефицит кадров у себя на родине. Пример — ИТ-кадры из Восточной Европы и Индии массово переезжают на Запад.
8. **Глобализация усиливает экологическую нагрузку**  
Интенсивное производство, логистика и потребление вредят экологии. Развитые страны часто экспортируют грязные производства в менее защищённые по экозаконам регионы.
9. **Рост политической и экономической зависимости**  
Некоторые страны теряют самостоятельность, становясь экономически зависимыми от внешних рынков, инвестиций или технологий. Это стратегическая уязвимость, особенно в условиях санкций или торговых войн.
10. **Контрдвижение — деглобализация**  
Сегодня всё чаще появляются антиглобалистские тренды: протекционизм, санкции, возврат производств, локализация IT. Это реакция на уязвимости глобального мира и попытка вернуть контроль над экономикой и суверенитетом.
'''
    print(query_to_qwen("3", "проблемы кочевников", test_text))
    print("\n", generate_presentation_by_description(test_text, 2, "влияние глобализации на кфс"))
    print("\n", generate_presentation_by_titles("влияние глобализации на растения", [{"Slide_title":"фикус"}, {"Slide_title": "гепсофилы"}]))